.panel.panel-default.account-panel.panel-right#global-ext-menu
  .panel-body
    .container
      .float-group.h20
        %h1.blue.pull-left Extensions
        %a.block.pull-right.dashboard-link{"href" => "https://dashboard.standardnotes.org", "target" => "_blank"} Open Dashboard
      %div.clear{"ng-if" => "!extensionManager.extensions.length && !themeManager.themes.length && !editorManager.externalEditors.length"}
        %p Customize your experience with editors, themes, and actions.
        .blue-box.mt-10
          %h3 Available as part of the Extended subscription.
          %p.mt-5 Note history
          %p.mt-5 Automated backups
          %p.mt-5 All editors, themes, and actions
          %a{"href" => "https://standardnotes.org/extensions", "target" => "_blank"}
            %button.mt-10
              %h3 Learn More

    %div{"ng-if" => "themeManager.themes.length > 0"}
      .container.no-bottom.section-margin
        %h2 Themes
      %ul
        %li{"ng-repeat" => "theme in themeManager.themes", "ng-click" => "theme.showDetails = !theme.showDetails"}
          .container
            %h3 {{theme.name}}
            %a{"ng-if" => "!themeManager.isThemeActive(theme)", "ng-click" => "themeManager.activateTheme(theme); $event.stopPropagation();"} Activate
            %a{"ng-if" => "themeManager.isThemeActive(theme)", "ng-click" => "themeManager.deactivateTheme(theme); $event.stopPropagation();"} Deactivate
            %div{"ng-if" => "theme.showDetails"}
              .link-group
                %a.red{"ng-click" => "deleteTheme(theme); $event.stopPropagation();"} Delete
                %a{"ng-click" => "theme.showLink = !theme.showLink; $event.stopPropagation();"} Show Link
                %p.small.selectable.wrap{"ng-if" => "theme.showLink"}
                  {{theme.url}}

    %div{"ng-if" => "editorManager.externalEditors.length > 0"}
      .container.no-bottom.section-margin
        %h2 Editors
        %p{"style" => "margin-top: 3px;"} Choose "Editor" in the note menu to use an editor for a specific note.
      %ul
        %li{"ng-repeat" => "editor in editorManager.externalEditors", "ng-click" => "editor.showDetails = !editor.showDetails"}
          .container
            %strong.red.medium{"ng-if" => "editor.conflict_of"} Conflicted copy
            %h3 {{editor.name}}
            %div.mt-5{"ng-if" => "editor.showDetails"}
              .link-group
                %a{"ng-if" => "!editor.default", "ng-click" => "setDefaultEditor(editor); $event.stopPropagation();"} Make Default
                %a.blue{"ng-if" => "editor.default", "ng-click" => "removeDefaultEditor(editor); $event.stopPropagation();"} Remove as Default
                %a{"ng-click" => "editor.showUrl = !editor.showUrl; $event.stopPropagation();"} Show Link
                %a.red{ "ng-click" => "deleteEditor(editor); $event.stopPropagation();"} Delete
              .wrap.mt-5.selectable{"ng-if" => "editor.showUrl"} {{editor.url}}

    %div{"ng-if" => "extensionManager.extensions.length"}
      .container.no-bottom.section-margin
        %h2 Actions
        %p{"style" => "margin-top: 3px;"} Choose "Actions" in the note editor to use installed actions.

      %ul
        %li{"ng-repeat" => "extension in extensionManager.extensions | orderBy: 'name'", "ng-init" => "extension.formData = {}", "ng-click" => "extension.showDetails = !extension.showDetails"}
          .container
            %h3 {{extension.name}}
            %p.small{"ng-if" => "extension.description"} {{extension.description}}
            %div{"ng-if" => "extension.showDetails"}
              .mt-10
                %label.block Access Type
                %label.normal.block{"ng-click" => " $event.stopPropagation();"}
                  %input{"type" => "radio", "ng-model" => "extension.encrypted", "ng-value" => "true", "ng-change" => "changeExtensionEncryptionFormat(true, extension);"}
                  Encrypted
                %label.normal.block{"ng-click" => " $event.stopPropagation();"}
                  %input{"type" => "radio", "ng-model" => "extension.encrypted", "ng-value" => "false", "ng-change" => "changeExtensionEncryptionFormat(false, extension);"}
                  Decrypted

              .small-v-space

              %ul{"ng-repeat" => "action in extension.actionsInGlobalContext()"}
                %li
                  %label.block {{action.label}}
                  %em{"style" => "font-style: italic;"} {{action.desc}}
                  %em{"ng-if" => "action.repeat_mode == 'watch'"}
                    Repeats when a change is made to your items.
                  %em{"ng-if" => "action.repeat_mode == 'loop'"}
                    Repeats at most once every {{action.repeat_timeout}} seconds
                  %div
                    %a{"ng-click" => "action.showPermissions = !action.showPermissions"} {{action.showPermissions ? "Hide permissions" : "Show permissions"}}
                    %div{"ng-if" => "action.showPermissions"}
                      {{action.permissionsString()}}
                      %label.block.normal {{action.encryptionModeString()}}

                  %div
                    .mt-5{"ng-if" => "action.repeat_mode"}
                      %button.light{"ng-if" => "extensionManager.isRepeatActionEnabled(action)", "ng-click" => "extensionManager.disableRepeatAction(action, extension); $event.stopPropagation();"} Disable
                      %button.light{"ng-if" => "!extensionManager.isRepeatActionEnabled(action)", "ng-click" => "extensionManager.enableRepeatAction(action, extension); $event.stopPropagation();"} Enable
                    %button.light.mt-10{"ng-if" => "!action.running && !action.repeat_mode", "ng-click" => "selectedAction(action, extension); $event.stopPropagation();"}
                      Perform Action
                    .spinner.mb-5.block{"ng-if" => "action.running"}
                  %p.mb-5.mt-5.small{"ng-if" => "!action.error && action.lastExecuted && !action.running"}
                    Last run {{action.lastExecuted | appDateTime}}
                  %label.red{"ng-if" => "action.error"}
                    Error performing action.

              %a.block.mt-5{"ng-click" => "extension.showURL = !extension.showURL; $event.stopPropagation();"} Show Link
              %p.wrap.selectable.small{"ng-if" => "extension.showURL"} {{extension.url}}
              %a.block.mt-5{"ng-click" => "deleteActionExtension(extension); $event.stopPropagation();"} Remove extension

    %div{"ng-if" => "componentManager.components.length > 0"}
      .container.no-bottom.section-margin
        %h2 Components
      %ul
        %li{"ng-repeat" => "component in componentManager.components", "ng-click" => "component.showDetails = !component.showDetails"}
          .container
            %h3 {{component.name}}
            %a{"ng-if" => "!componentManager.isComponentActive(component)", "ng-click" => "componentManager.activateComponent(component); $event.stopPropagation();"} Activate
            %a{"ng-if" => "componentManager.isComponentActive(component)", "ng-click" => "componentManager.deactivateComponent(component); $event.stopPropagation();"} Deactivate
            %div{"ng-if" => "component.showDetails"}
              .link-group
                %a.red{"ng-click" => "deleteComponent(component); $event.stopPropagation();"} Delete
                %a{"ng-click" => "component.showLink = !component.showLink; $event.stopPropagation();"} Show Link
                %a{"ng-if" => "component.permissions.length", "ng-click" => "revokePermissions(component); $event.stopPropagation();"} Revoke Permissions
                %p.small.selectable.wrap{"ng-if" => "component.showLink"}
                  {{component.url}}

    .container.section-margin
      %h2.blue Install
      %p.faded Enter an install link
      %form.mt-10.mb-10
        %input.form-control{:autofocus => 'autofocus', :name => 'url', :required => true, :autocomplete => "off",
        :type => 'url', 'ng-model' => 'formData.installLink', "ng-keyup" => "$event.keyCode == 13 && submitInstallLink();"}
      %p.blue{"ng-if" => "formData.successfullyInstalled"} Successfully installed extension.
